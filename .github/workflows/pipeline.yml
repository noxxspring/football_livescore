name: Build and Deploy Spring Boot Application to EC2

# Trigger this pipeline on push to the main branch
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Cache Maven dependencies to speed up future builds
    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Set up JDK 17 for building the project
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'  # Specify the JDK distribution
        architecture: x64

    # Run Maven clean install to build the project
    - name: Build with Maven
      run: |
        cd Football-updates  # Change to the directory containing pom.xml
        mvn clean install 

    # Upload the JAR file to GitHub Actions artifact store
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: ./Football-updates/target/Football-updates-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Download the JAR file from the build job artifact
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: ./target

    # Copy the JAR file to EC2 using SCP
    - name: Copy JAR file to EC2
      run: |
        scp -v -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ./target/Football-updates-0.0.1-SNAPSHOT.jar ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/app.jar
    # SSH into EC2 and restart the Spring Boot application
    - name: SSH into EC2 and restart Spring Boot app
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          # Stop the previous Spring Boot app if running
          pkill -f 'java -jar'

          # Start the new version of the Spring Boot app
          nohup java -jar /home/ubuntu/app.jar > /home/ubuntu/app.log 2>&1 &
        EOF
